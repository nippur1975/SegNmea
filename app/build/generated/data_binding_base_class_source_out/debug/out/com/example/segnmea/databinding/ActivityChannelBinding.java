// Generated by view binder compiler. Do not edit!
package com.example.segnmea.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.segnmea.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChannelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText channel1EditText;

  @NonNull
  public final EditText channel2EditText;

  @NonNull
  public final EditText channel3EditText;

  @NonNull
  public final EditText channel4EditText;

  @NonNull
  public final Button saveButton;

  private ActivityChannelBinding(@NonNull LinearLayout rootView, @NonNull EditText channel1EditText,
      @NonNull EditText channel2EditText, @NonNull EditText channel3EditText,
      @NonNull EditText channel4EditText, @NonNull Button saveButton) {
    this.rootView = rootView;
    this.channel1EditText = channel1EditText;
    this.channel2EditText = channel2EditText;
    this.channel3EditText = channel3EditText;
    this.channel4EditText = channel4EditText;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChannelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChannelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_channel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChannelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.channel1EditText;
      EditText channel1EditText = ViewBindings.findChildViewById(rootView, id);
      if (channel1EditText == null) {
        break missingId;
      }

      id = R.id.channel2EditText;
      EditText channel2EditText = ViewBindings.findChildViewById(rootView, id);
      if (channel2EditText == null) {
        break missingId;
      }

      id = R.id.channel3EditText;
      EditText channel3EditText = ViewBindings.findChildViewById(rootView, id);
      if (channel3EditText == null) {
        break missingId;
      }

      id = R.id.channel4EditText;
      EditText channel4EditText = ViewBindings.findChildViewById(rootView, id);
      if (channel4EditText == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ActivityChannelBinding((LinearLayout) rootView, channel1EditText, channel2EditText,
          channel3EditText, channel4EditText, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
