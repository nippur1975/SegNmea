// Generated by view binder compiler. Do not edit!
package com.example.segnmea.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.segnmea.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCompassBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView channelNameTextView;

  @NonNull
  public final Button clinometerButton;

  @NonNull
  public final ImageView compassRose;

  @NonNull
  public final Button dataButton;

  @NonNull
  public final TextView headingValueTextView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final Button mainButton;

  private ActivityCompassBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView channelNameTextView, @NonNull Button clinometerButton,
      @NonNull ImageView compassRose, @NonNull Button dataButton,
      @NonNull TextView headingValueTextView, @NonNull LinearLayout linearLayout,
      @NonNull Button mainButton) {
    this.rootView = rootView;
    this.channelNameTextView = channelNameTextView;
    this.clinometerButton = clinometerButton;
    this.compassRose = compassRose;
    this.dataButton = dataButton;
    this.headingValueTextView = headingValueTextView;
    this.linearLayout = linearLayout;
    this.mainButton = mainButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCompassBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCompassBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_compass, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCompassBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.channelNameTextView;
      TextView channelNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (channelNameTextView == null) {
        break missingId;
      }

      id = R.id.clinometerButton;
      Button clinometerButton = ViewBindings.findChildViewById(rootView, id);
      if (clinometerButton == null) {
        break missingId;
      }

      id = R.id.compassRose;
      ImageView compassRose = ViewBindings.findChildViewById(rootView, id);
      if (compassRose == null) {
        break missingId;
      }

      id = R.id.dataButton;
      Button dataButton = ViewBindings.findChildViewById(rootView, id);
      if (dataButton == null) {
        break missingId;
      }

      id = R.id.headingValueTextView;
      TextView headingValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (headingValueTextView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.mainButton;
      Button mainButton = ViewBindings.findChildViewById(rootView, id);
      if (mainButton == null) {
        break missingId;
      }

      return new ActivityCompassBinding((ConstraintLayout) rootView, channelNameTextView,
          clinometerButton, compassRose, dataButton, headingValueTextView, linearLayout,
          mainButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
